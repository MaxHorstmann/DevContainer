{
	"name": "C# .NET 8 Development with Redis",
	"dockerComposeFile": "docker-compose.yml",
	"service": "app",
	"workspaceFolder": "/workspaces/${localWorkspaceFolderBasename}",
	
	// Features to add to the dev container. More info: https://containers.dev/features.
	"features": {
		"ghcr.io/devcontainers/features/docker-in-docker:2": {},
		"ghcr.io/devcontainers/features/git:1": {},
		"ghcr.io/devcontainers/features/github-cli:1": {}
	},

		// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [5002, 5003, 8080],

	// Configure tool-specific properties.
	"customizations": {
		// Configure properties specific to VS Code.
		"vscode": {
			// Add the IDs of extensions you want installed when the container is created.
			"extensions": [
				"ms-dotnettools.csharp",
				"ms-dotnettools.csdevkit",
				"ms-vscode.vscode-json",
				"ms-azuretools.vscode-docker",
				"ms-vscode.PowerShell",
				"bradlc.vscode-tailwindcss",
				"esbenp.prettier-vscode",
				"ms-vscode.vscode-typescript-next",
				"cweijan.vscode-redis-client"
			],
			"settings": {
				"dotnet.server.useOmnisharp": false,
				"dotnet.completion.showCompletionItemsFromUnimportedNamespaces": true,
				"editor.formatOnSave": true,
				"editor.codeActionsOnSave": {
					"source.organizeImports": "explicit"
				}
			}
		}
	},

	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	// "remoteUser": "root",

	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": "dotnet --version && docker --version && redis-cli -h redis ping",

	// Use 'postStartCommand' to run commands after the container starts.
	"postStartCommand": ".devcontainer/setup-azure-resources.sh && echo 'Dev container is ready! ðŸš€'"
}
